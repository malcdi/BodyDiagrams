
<div id = "header">
	<div>
		<h1>Body Diagrams</h1>
	</div>
	<div style="width:600px">
		<h4>
			1: Use the zoom pane to focus <br/> 
			2: Click and drag to draw; double click to define a rectangular region <br/>
			3: Click "Done" when you are finished describing a symptom
		</h4>
	</div>
	<button type="button" id="submitTask">Submit!</button>
</div>
<!--Description of the application
<div id="instructions">
<p> FREE HAND: mouse down and drag </p>
<p> REGION SELECT: double click & resize </p>
</div>-->


<div style="position: relative; margin-left: 10px; margin-right: 10px;">
<div id="svg-content" style = "position:absolute;width:1200px; height:750px;"></div>
<div id="content-panel">

<canvas id="canvas" width="500" height="750" style="position:relative"/></canvas>

<!-- Zoom/Drag Control -->
<div style="display:inline-block;vertical-align:top; position: absolute; top: 15px; left: 15px;">
 	<img class="opMode" id="zoom" src="/assets/dragHand.png" style="width:30px;height:30px;"/>
 	<img class="opMode" id="draw" src="/assets/drawIconInactive.png" style="width:30px;height:30px;"/>
</div>

<!-- Zoom Control -->
<div id="zoomControl">
	<div style="position: absolute; left: 6px; top: 40px; width: 90px; height: 90px; "><div style="position: absolute; left: 16px; top: 17px; width:48px; height: 47px; overflow: hidden; "><img style="position: absolute; left: 0px; top: 0px; border: 0px; padding: 0px; margin: 0px;width:48px; height:370px " src="/assets/mapcontrols.png"></div></div>
	
	<div style="position: absolute; left: 6px; top: 40px; width: 90px; height: 90px; " id="compass"><div style="position: absolute; left: 30px; top: 17px; width: 18px; height: 18px; cursor: pointer; " title="Pan up"></div><div style="position: absolute; left: 16px; top: 30px; width: 18px; height: 18px; cursor: pointer; " title="Pan left"></div><div style="position: absolute; left: 46px; top: 30px; width: 18px; height: 18px; cursor: pointer; " title="Pan right" ></div><div style="position: absolute; left: 30px; top: 40px; width: 18px; height: 18px; cursor: pointer; " title="Pan down"></div></div>
	
	<div style="position: absolute; left: 34px; top: 113px; width: 22px; height: 22px; overflow: hidden; z-index: 10001; " guidedhelpid="zoom_in"><div style="width: 22px; height: 22px; overflow: hidden; "><img style="position: absolute; left: 0px; top: -428px; border: 0px; padding: 0px; margin: 0px; " src="/assets/mapcontrols.png"></div><div style="position: absolute; left: 0px; top: 0px; width: 22px; height: 22px; cursor: pointer; " title="Zoom In"></div></div>
	
	<div style="position: absolute; left: 16px; top: 131px; width: 59px; height: 146px; overflow: hidden; " id="lmcslider"><div style="width: 59px; height: 277px; overflow: hidden; "><img style="position: absolute; left: 0px; top: -84px; border: 0px; padding: 0px; margin: 0px; " src="/assets/mapcontrols.png"></div></div>
	
	<div style="position: absolute; left: 16px; top: 277px; width: 59px; height: 22px; text-align: left; z-index: 10003; " guidedhelpid="zoom_out" id="lmczo"><div style="width: 59px; height: 22px; overflow: hidden; position: absolute; "><img style="position: absolute; left: 0px; top: -361px; border: 0px; padding: 0px; margin: 0px; " src="/assets/mapcontrols.png"></div><div style="position: absolute; left: 16px; top: -4px; width: 26px; height: 26px; cursor: pointer; " title="Zoom Out"></div></div>
	
	<div style="position: absolute; left: 35px; top: 131px; width: 22px; height: 150px; z-index: 10002; cursor: pointer; " id="lmczb" guidedhelpid="zoom_bar"><div style="width: 22px; height: 14px; overflow: hidden; position: absolute; cursor: url('/assets/dragCursor.cur'), default; left: 0px; top: 120px; " guidedhelpid="zoom_slider" id="lmczbg" title="Drag to zoom"><img style="position: absolute; left: 0px; top: -384px; border: 0px; padding: 0px; margin: 0px; " src="/assets/mapcontrols.png"></div></div>
</div>

	<!-- Rotate left right image -->
	<img class="rotation" id="left" src="/assets/dragHand.png"/>
	<img class="rotation" id="right" src="/assets/dragHand.png"/>

	<!--Hidden annotation box-->
	<div class="annotator-outer annotator-editor"id="annotator" style="position:absolute">
		<div class="annotator-widget" >
			<ul class="annotator-listing">
				<li class="annotator-item"><div class="pain_type_slider pain_severity"style="width:70%;float:right"></div><span>Symptom Severity:</span></li>
				<li class="annotator-item">
					<div class="pain_type annotator-tags">
						<span>Symptom Type:</span>
						<span class="annotator-tag tag-selected">Sharp</span>
						<span class="annotator-tag">Numb</span>
						<span class="annotator-tag">Dull</span>
					</div></li>
				<li class="annotator-item"><div class="pain_type_slider pain_depth" style="width:70%;float:right"></div><span>Symptom Depth:</span></li>
				<li class="annotator-item">
					<div class="pain_posture annotator-tags">
						<span>Symptom Postures:</span>
						<span class="annotator-tag tag-selected">Stand</span>
						<span class="annotator-tag">Walk</span>
						<span class="annotator-tag">Sit</span>
						<span class="annotator-tag">Lie</span>
				</div></li>
				<li class="annotator-item">
					<textarea class="pain_annotation" placeholder="Commentsâ€¦" rows= "4"></textarea>
				</li>
			</ul>
		</div>
	</div>
	
</div>

</div>
	
	<!-- Tag Annotations-->
	<div id="pain_annotation_list_container">
		<ul id="pain_annotation_list" >
			
		</ul>
	</div>
	
<script type="text/javascript">
	function tagSelectionUpdate(index, select){
		var annotatorElem = $("#tag_"+index);
		if(annotatorElem.length==0)
			$("#annotator > div.annotator-widget").css({
				opacity:1.0
			});
		else
			$("#annotator > div.annotator-widget").css({
				opacity:0.5
			});
		if(select && annotatorElem.hasClass("annotator-list"))
			annotatorElem.toggleClass("annotator-list");
		else if(!select && !annotatorElem.hasClass("annotator-list"))
			annotatorElem.toggleClass("annotator-list");
	}	
	
	function updateAnnotations(tag,index){
		var severity = $(".pain_severity").slider("value")/20+1;
		var type = $(".pain_type>.tag-selected")[0].innerText;
		var posture = $(".pain_posture>.tag-selected")[0].innerText;
		var depth = $(".pain_depth").slider("value")/20+1;
		var text = $(".pain_annotation").val();
		
		$(".pain_severity").slider("value", 0);
		$(".pain_depth").slider("value",0);
		$(".pain_annotation").val("");
		
		tag.saveTagAnnotation(severity, type, posture, depth, text);
		var tagAnnotation = $("#annotator > .annotator-widget").clone();
		tagAnnotation.attr("id","tag_"+index);
		tagAnnotation.css({
			"position":"static",
			"opacity":""});
		tagAnnotation.find(".pain_annotation")[0].value= text;
		tagAnnotation.toggleClass("annotator-list");
		
		var newLiElem = $("<li></li>");
		tagAnnotation.appendTo(newLiElem);
		newLiElem.appendTo("#pain_annotation_list");
	}
	
	function getURLParameter(name) {
			return decodeURIComponent(
					(location.search.match(RegExp("[?|&]"+name+'=(.+?)(&|$)'))||[,null])[1]
			);  
	}
	//current view side {0:front, 1: right, 2: back, 3: left}
	var cur_view_side=0;
	var imagePrefix="/assets/";
	
	var zoomScale=1.0;//current zoom scale
	$(document).ready(function(){
		//$('#content-panel img').panZoom({min_height:1200,min_width:316});
		
		var currentView = 0;
		var currentGender = getURLParameter("gender"); 
		var canvasElem=document.getElementById("canvas");
		canvasElem.width=$(canvasElem).parent().width();
		var cvState = new CanvasState(document.getElementById("canvas"),
						{gender:currentGender, 
						view:currentView, 
						mode:"zoom", 
						imageLoader:ImageLoader,
						saveCallback: updateAnnotations,
						selectCallback: tagSelectionUpdate});
		
	   /* Setting up annotation box*/
		$(".pain_severity").slider({
			step:20,
			slide: function(event, ui) {
				//this.children[0].innerHTML=ui.value/10;
				var greyValue = 200 - Math.floor(ui.value);
				var redValue = Math.floor(ui.value*55/100) +200;
				this.children[0].style.backgroundImage="none";
				this.children[0].style.backgroundColor="rgb("+redValue+","+greyValue+","+greyValue+")";
				var severityLevel = ui.value/20+1;
				var painType = $(".pain_type>.tag-selected").text();
				cvState.updateGraphics(cvState.allTags.length-1, severityLevel ,painType);
			}
		});
		
		var pain_depth_slider = $(".pain_depth").slider({
			step:20
		});
		
		$(".annotator-tag").click(function(){
			var children = this.parentElement.children;
			for (var index in children){
				var classes=children[index].classList;
				if(classes!=undefined && classes.contains("annotator-tag") && classes.contains("tag-selected")){
					$(children[index]).toggleClass("tag-selected");
				}
			}
			$(this).toggleClass("tag-selected");
			
			if(this.parentElement.id=="pain_type"){
				//TODO:only applies to the LAST drawing
				var severityLevel = $(".pain_severity").slider("value")/20+1;
				cvState.updateGraphics(cvState.allTags.length-1, severityLevel , this.innerText);
			}
			else if(this.parentElement.id=="pain_posture"){
				
			}
		})
		/*
		$(".annotator-cancel").click(function(){
			//TODO:UNDOES LAST drawing
			cvState.undoLastDrawing(cvState);
			$("#annotator > div.annotator-widget").css({
				opacity:0.5
			});
		})
		
		$(".annotator-save").click(function(){
			//TODO: only applies to last
			var severity = $("#pain_severity").slider("value")/20+1;
			var type = $("#pain_type>.tag-selected")[0].innerText;
			var posture = $("#pain_posture>.tag-selected")[0].innerText;
			var depth = $("#pain_depth").slider("value")/20+1;
			var text = $("#pain_annotation").val();
			
			cvState.saveTagAnnotation(cvState.allTags.length-1, severity, type, posture, depth, text);
			$("#annotator > div.annotator-widget").css({
				opacity:1.0
			});
		})*/
		
		/* Setting up Mode Control */
		$('.opMode').click(function(){
			cvState.setMode(this.id);
			//change images accordingly
			var children = this.parentElement.children;
			if(this.id=="zoom"){
				this.src = '/assets/dragHand.png';
				this.style.border ="solid 2px rgb(108, 204, 128)";
				$("#draw")[0].src = '/assets/drawIconInactive.png';
				$("#draw")[0].style.border ="solid 2px rgb(108, 204, 128)";
				$("#draw")[0].style.border ="";
			}
			else{
				this.src = '/assets/drawIcon.png';
				$("#zoom")[0].src = '/assets/dragHandInactive.png';
				this.style.border ="solid 2px rgb(108, 204, 128)";
				$("#zoom")[0].style.border ="";
			}
		});
		
		/* Setting up Zoom Control*/
		//panning
		$('#compass div').click(function(){
			switch(this.title){
				case "Pan left":
					cvState.setZoomPan(-2, 0, 0);
					break;
				case "Pan right":
					cvState.setZoomPan(2, 0, 0);
					break;
				case "Pan up":
					cvState.setZoomPan(0, -2, 0);
					break;
				case "Pan down":
					cvState.setZoomPan(0,2, 0);
					break;
			}
		})
		
		var sliderElem = $('#lmczbg')[0];
		//zoom in/out
		$('div[title="Zoom In"]').click(function(){
			if(parseInt(sliderElem.style.top) > 0){
				var newY = parseInt(sliderElem.style.top)-10;
				newY = Math.max(Math.min(137, newY), 0);
				sliderElem.style.top = newY +"px";
				cvState.setZoomPan(0,0,0.75);
			}
		});
		$('div[title="Zoom Out"]').click(function(){
			if(parseInt(sliderElem.style.top) < 137){
				var newY = parseInt(sliderElem.style.top)+10;
				newY = Math.max(Math.min(137, newY), 0);
				sliderElem.style.top = newY +"px";
				cvState.setZoomPan(0,0,-0.75);
			}
		});
		
		//slider zoom
		$('#lmczb').mousedown(function(e){
			e.preventDefault();
			var oldY = parseInt(sliderElem.style.top);
			var newY = (e.pageY - this.offsetTop) -76;
			sliderElem.style.top = Math.max(Math.min(137, newY), 0) + "px";
			cvState.setZoomPan(0, 0, (oldY-newY)*10/137);
			this.dragStart = true;
		});
		$('#lmczb').mousemove(function(e){
			e.preventDefault();
			if(this.dragStart){
				var newY = (e.pageY - this.offsetTop) -76;
				newY = Math.max(Math.min(137, newY), 0);
				var lastY = parseInt(sliderElem.style.top);
				sliderElem.style.top = newY + "px";
				cvState.setZoomPan(0, 0, (lastY-newY)*10/137);
			}
		});
		$('#lmczb').mouseup(function(e){
			this.dragStart= false;
		});
		
		/* Setting up Rotation Control */
		$("#left").attr("src",ImageLoader.getBodyImageSrc(currentGender, 3));
		$("#right").attr("src",ImageLoader.getBodyImageSrc(currentGender, 1));
		var padding = $("#left").width() + parseInt($("#left").css("padding"))*2 + parseInt($("#left").css("margin"))*2
		$("#right").css({left: canvasElem.width- padding});
		
		$(".rotation").click(function(){
			currentView = getView(currentView, this.id);
			this.src = ImageLoader.getBodyImageSrc(currentGender, getView(currentView, this.id));
			var otherDirection = getOtherView(this.id);
				$("#"+otherDirection)[0].src = ImageLoader.getBodyImageSrc(currentGender, getView(currentView,  otherDirection));
			cvState.setView(currentView);
		});
		
		/* Showing All Annotations */
		$("#annotator > div.annotator-widget").css({
			opacity:0.5
		});
		//setup
		/*var svg = d3.select("#svg-content").append("svg")
					.attr("width", "1200")
					.style("position", "absolute")
					.attr("height", "800");
		cvState.svgA = svg;*/		
	});

		/*
		d3.select("#svg-content").select("svg").selectAll("rect")
			.data(cvState.allTags)
			.enter().append("rect")
				.attr("x", 700)
				.attr("class","annotated")
				.attr("y", function(d){
					return 30*this.parentElement.childNodes.length +200;
				})
				.attr("width", 200)
				.attr("height", 50)
				.attr("rx", 10).attr("ry",10)
				.style("opacity", 0.8)
				.style("fill", "white")
				.style("-webkit-svg-shadow","-1px 2px 2px navy");
		var txtA = d3.select("#svg-content").select("svg").selectAll("text")
			.data(cvState.allTags)
			.enter().append("text")
				.attr("x", 700)
				.attr("y", 200)
				.attr("dx", 10)
				.attr("dy", function(d){
					return 2 + 3.0*(this.parentElement.childNodes.length-1)+ "em";
				});
				
		txtA.append("tspan")
			.attr("x", 700)
			.text(function(d){
				return 'severity:' + d.severity;
			});
		txtA.append("tspan")
			.attr("x", 700)
			.attr("dx", 10)
			.attr("dy", "1.5em")
			.text(function(d){
				return 'annotation: '+d.text;
			})
		*/
	
	function getOtherView(direction){
		if (direction=="left")
			return "right"
		else if(direction=="right")
			return "left"
		return "";
	}
	
	function getView(curView, direction){
		if (direction=="left")
			return (curView+3)%4
		else if(direction=="right")
			return (curView+1)%4
		return 0;
	}
	
	/*var cvState =null;//new CanvasState(document.getElementById("canvas"));//second pane: zoomed canvas
	var zcvState = null;//new ZoomCanvasState(document.getElementById("canvas"), cvState, zoomCallback, tagDoneCallback);//first pane: main canvas
	cvState.setViewState(0,0,1.0); */
	/*
	function translateTagInfo(tagInfo){
		var severity="no pain";
		if(tagInfo.depth==10) output="no pain";
		else if(tagInfo.depth==20) output="mild pain";
		else if(tagInfo.depth==30) output="mild pain";
		else if(tagInfo.depth==40) output="discomforting";
		else if(tagInfo.depth==50) output="moderate";
		else if(tagInfo.depth==60) output="distressing";
		else if(tagInfo.depth==70) output="severe";
		else if(tagInfo.depth==80) output="intense";
		else if(tagInfo.depth==90) output="very severe";
		else if(tagInfo.depth==100) output="unbearable";
		tagInfo.severity=severity;
		
		var depth="skin";
		if(tagInfo.depth==25) output="beneath skin";
		if(tagInfo.depth==50) output="core";
		if(tagInfo.depth==75) output="close to opposite";
		if(tagInfo.depth==100) output="opposite side";
		tagInfo.depth=depth;
		return tagInfo;
	}
	//callback after "done" button clicked for tag
	function tagDoneCallback(){
		//update drawing canvas
		cvState.flush();
	
		//updating my_symptoms tab
		$("#my_symptoms").accordion("destroy");
		var symptomLogger= $("#my_symptoms");
		var TagInfo=translateTagInfo(packTagInfo());
		
		symptomLogger.append($("<h3><a href='#'>"+TagInfo.annotate+"</a></h3>"));
		symptomLogger.append($("<div><div>severity: "+TagInfo.severity+
													"</div><div>depth: "+TagInfo.depth+"</div></div>"));
		
		setTimeout(function(){
			$("#my_symptoms").accordion();
			$("#my_symptoms").accordion("resize");
		}, 100);
		
		//resetting pain_panel tab
		document.getElementById("tag_annotate").value="";
		$("#tag_pain_severity").find("a")[0].innerHTML="";
		$( ".pain_type_slider" ).slider( "option", "value", 0 );
		$("#tag_pain_severity").find("a")[0].style.backgroundColor="#E6E6E6";
	}
	
	//returns annotated tag information from pain tab.
	function packTagInfo(){
		var annotation=document.getElementById("tag_annotate").value;
		var severity=$("#tag_pain_severity").slider( "option", "value" );
		var depth=$("#tag_pain_depth").slider( "option", "value" );
		return {"annotate":annotation, "severity":severity, "depth":depth, "view_side":cur_view_side};
	}
	
	//called when zoom button is clicked.
	function zoomCallback(x, y, w, h){
		var originalW=document.getElementById("body_view").width;
		var marginBuffer = (330 - originalW)/2;
		var standardW=330;
		zoomScale=standardW/w;
		var zoomImg=document.getElementById("zoom_body_view");
		zoomImg.style.width=originalW*zoomScale+"px";
		zoomImg.style.left=(marginBuffer*zoomScale - x*zoomScale)+"px";
		zoomImg.style.top="-"+y*zoomScale+"px";
		cvState.setViewState(x,y,zoomScale);
	}
	*/
	/*
	//set up buttons & panels & tabs
	$(function() {
		$("#my_symptoms").accordion();
		$("#symptomTypes").buttonset();
		$("#tag_pain_severity").slider({
			step:10,
			slide: function(event, ui) {
				this.children[0].innerHTML=ui.value/10;
				var greenValue=Math.floor(ui.value*255/100);
				var redValue=255-greenValue;
				this.children[0].style.backgroundImage="none";
				this.children[0].style.backgroundColor="rgb("+greenValue+","+redValue+",0)";
			}
		});
		$("#tag_pain_depth").slider({
			step:25
		});
		$(".pain_type_slider").find("a").css({
			textDecoration:"none",
			textAlign:"center"
		});
		
		//set up with user's information
		if(getURLParameter("gender")=="female"){
			imagePrefix="/assets/female_";
			$("#body_view").attr("src",imagePrefix + "whole_"+cur_view_side+".png");
			$("#zoom_body_view").attr("src",imagePrefix + "whole_"+cur_view_side+".png");
	}	
		
		//buttons
		$( "#rotateLeft" ).click(function(){
			cvState.flush();
			cur_view_side = (cur_view_side+1)%4;
			zcvState.setCurViewSide(cur_view_side);
			$("#body_view").attr("src",imagePrefix + "whole_"+cur_view_side+".png");
			$("#zoom_body_view").attr("src",imagePrefix + "whole_"+cur_view_side+".png");
		});
		$( "#rotateRight" ).click(function(){
			cvState.flush();
			cur_view_side = (cur_view_side+3)%4;
			zcvState.setCurViewSide(cur_view_side);
			$("#body_view").attr("src",imagePrefix + "whole_"+cur_view_side+".png");
			$("#zoom_body_view").attr("src",imagePrefix + "whole_"+cur_view_side+".png");
		});
		$( "#undo" ).click(function(){
			cvState.undoLastDrawing(cvState);
		});
		$( "#submitTask" ).click(function(){
			zcvState.submitAll(getURLParameter("gender"),  (2012-getURLParameter("birth")));
		});
		$( "#tagDone" ).click(function(){
			var tagInfo=packTagInfo();
			console.log(tagInfo);
			if(tagInfo.severity=="0%") {
				alert("please set symptom severity level");
			}
			else if(tagInfo.annotate=="") {
				alert("please describe the symptom");
			}
			else{
				zcvState.saveTagInfo(tagInfo);
			}
		});
	});*/
</script>